/*
Deployment script for PalerData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PalerData"
:setvar DefaultFilePrefix "PalerData"
:setvar DefaultDataPath "C:\Users\ACER\AppData\Local\Microsoft\VisualStudio\SSDT\PalerIPT101Solution"
:setvar DefaultLogPath "C:\Users\ACER\AppData\Local\Microsoft\VisualStudio\SSDT\PalerIPT101Solution"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[Perfume]...';


GO
CREATE TABLE [dbo].[Perfume] (
    [PerfumeID]     NVARCHAR (60) NOT NULL,
    [PerfumeName]   NVARCHAR (50) NULL,
    [Brand]         NVARCHAR (50) NULL,
    [Price]         INT           NULL,
    [StockQuantity] INT           NULL,
    PRIMARY KEY CLUSTERED ([PerfumeID] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[CreatePerfume]...';


GO
CREATE PROCEDURE [dbo].[CreatePerfume]
	@PerfumeID NVARCHAR(60),
	 @PerfumeName NVARCHAR(50), 
     @Brand NVARCHAR(50),
     @Price INT, 
     @StockQuantity INT
AS
BEGIN
	INSERT INTO Perfume (PerfumeID, PerfumeName, Brand, Price, StockQuantity)
    VALUES (@PerfumeID, @PerfumeName, @Brand, @Price, @StockQuantity);
END
GO
PRINT N'Creating Procedure [dbo].[DeletePerfume]...';


GO
CREATE PROCEDURE [dbo].[DeletePerfume]
	@PerfumeID NVARCHAR(60)
AS
BEGIN
	DELETE  FROM dbo.perfume WHERE PerfumeID = @PerfumeID;
END
GO
PRINT N'Creating Procedure [dbo].[GetAllPerfume]...';


GO
CREATE PROCEDURE [dbo].[GetAllPerfume]
	AS
BEGIN
	SELECT * FROM dbo.perfume;
END
GO
PRINT N'Creating Procedure [dbo].[UpdatePerfume]...';


GO
CREATE PROCEDURE [dbo].[UpdatePerfume]
	@PerfumeID NVARCHAR(60),
	 @PerfumeName NVARCHAR(50), 
     @Brand NVARCHAR(50),
     @Price INT, 
     @StockQuantity INT
AS
BEGIN
	UPDATE dbo.perfume
	SET PerfumeName = @PerfumeName,
		Brand = @Brand,
		Price = @Price,
		StockQuantity = @StockQuantity
	WHERE PerfumeID = @PerfumeID
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
INSERT INTO [dbo].[Perfume] (PerfumeID, PerfumeName, Brand, Price, StockQuantity)
VALUES 
(NEWID(), N'Cloud', N'Fragrance', N'500', N'1000'),
(NEWID(), N'Vanilla', N'Victoria Secret', N'300', N'500');
GO

GO
PRINT N'Update complete.';


GO
